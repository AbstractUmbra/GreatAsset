[tool.poetry]
name = "great_asset"
version = "1.1.1"
description = "A small headless library for editing Lethal Company save files."
authors = ["Alex NÃ¸rgaard <umbra@abstractumbra.dev>"]

license = "MIT"
readme = "README.md"
repository = "https://github.com/AbstractUmbra/great_asset"

keywords = ["save-editor", "wrapper", "lethal-company"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Typing :: Typed",
]
include = ["LICENSE"]
packages = [
    { include = "great_asset" },
    { include = "great_asset/**/*.py" },
    { include = "great_asset/py.typed" },
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/AbstractUmbra/great_asset/issues"
"Discord" = "https://discord.gg/aYGYJxwqe5"

[tool.poetry.dependencies]
python = "^3.11"
pycryptodome = "^3.19.0"
orjson = { version = "*", optional = true }

[tool.poetry.group.dev.dependencies]
ruff = "*"
poethepoet = "*"

[tool.poetry.group.speed.dependencies]
orjson = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinxcontrib-trio = "*"
furo = "*"

[tool.poetry.group.tests.dependencies]
pytest = "*"

[tool.poetry.extras]
speed = ["orjson"]

[tool.ruff]
line-length = 125
select = [
    "C4",
    "F",
    "G",
    "I",
    "PTH",
    "RUF",
    "SIM",
    "TCH",
    "UP",
    "W",
    "PERF",
    "ANN",
]
ignore = [
    "F401",
    "F402",
    "F403",
    "F405",
    "PERF203",
    "PLR2004",
    "RUF001",
    "RUF009",
    "SIM105",
    "S101",
    "UP034",
    "UP038",
    "ANN101",
    "ANN102",
    "ANN401",
]
exclude = ["docs/"]
[tool.ruff.isort]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.pyright]
venvPath = "."
venv = ".venv/"
exclude = ["**/__pycache__", "docs/**/*.py"]
include = ["great_asset", "tests"]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
pythonVersion = "3.11"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.poe.tasks]
install = "poetry install --with tests,docs,speed"
check = "ruff check ."
format = "ruff format ."
pyright = "pyright"
types_ = "pyright --ignoreexternal --verifytypes great_asset"
types = ["pyright", "types_"]
tests = "pytest"
docs = "sphinx-build -aEWT --keep-going docs/ docs/build" # TODO: add -n when sphinx is fixed
uninstall = "pip uninstall great_asset -y"
pre = [
    "install",
    "check",
    "format",
    "types",
    "tests",
    "docs",
    "uninstall",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
